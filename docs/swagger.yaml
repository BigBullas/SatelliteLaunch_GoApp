basePath: /
definitions:
  models.Payload:
    properties:
      description:
        type: string
      desired_price:
        type: number
      detailed_desc:
        type: string
      flight_date_end:
        type: string
      flight_date_start:
        type: string
      img_url:
        type: string
      is_available:
        type: boolean
      load_capacity:
        type: number
      payload_id:
        type: integer
      title:
        type: string
    type: object
  models.RocketFlight:
    properties:
      confirmed_at:
        type: string
      created_at:
        type: string
      creator_id:
        type: integer
      creator_login:
        type: string
      flight_date:
        type: string
      flight_id:
        type: integer
      formed_at:
        type: string
      load_capacity:
        type: number
      moderator_id:
        type: integer
      moderator_login:
        type: string
      place_number:
        type: integer
      price:
        type: number
      status:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      is_admin:
        type: boolean
      login:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 6
        type: string
      userId:
        type: integer
    required:
    - login
    - password
    type: object
  models.UserLogin:
    properties:
      login:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - login
    - password
    type: object
  models.UserSignUp:
    properties:
      email:
        type: string
      login:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - login
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: Web application on the topic "Launching satellites from the Vostochny
    cosmodrome"
  title: Satellite launch application
  version: "1.0"
paths:
  /check-auth:
    get:
      consumes:
      - application/json
      description: Retrieves user information based on the provided user context
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Check user authentication
      tags:
      - Authentication
  /flights_payloads/payload/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a payload from a planned flight.
      parameters:
      - description: ID of the payload
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Payload removed from flight
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Remove payload from flight
      tags:
      - Flights Payloads
  /flights_payloads/payload/{id}/count/{count}:
    put:
      consumes:
      - application/json
      description: Change the count of a payload for a planned flight.
      parameters:
      - description: ID of the payload
        in: path
        name: id
        required: true
        type: integer
      - description: New count of the payload
        in: path
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Payload count successfully updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Change payload count for flight
      tags:
      - Flights Payloads
  /logout:
    post:
      consumes:
      - application/json
      description: Logs out the user by blacklisting the access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Logout
      tags:
      - Authentication
  /payloads:
    get:
      consumes:
      - application/json
      description: Retrieves a list of payloads based on the provided filters
      parameters:
      - description: Space Satellite
        in: query
        name: space_satellite
        type: string
      - description: Load Capacity Start
        in: query
        name: load_capacity_start
        type: string
      - description: Load Capacity End
        in: query
        name: load_capacity_end
        type: string
      - description: Flight Date Start
        in: query
        name: flight_date_start
        type: string
      - description: Flight Date End
        in: query
        name: flight_date_end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Payload'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get Payload List
      tags:
      - Payloads
    post:
      consumes:
      - multipart/form-data
      description: Create a new payload with the provided details.
      parameters:
      - description: Title of the payload
        in: formData
        name: title
        required: true
        type: string
      - description: Image file of the payload
        in: formData
        name: image
        required: true
        type: file
      - description: Load capacity of the payload
        in: formData
        name: load_capacity
        type: string
      - description: Description of the payload
        in: formData
        name: description
        type: string
      - description: Detailed description of the payload
        in: formData
        name: detailed_description
        type: string
      - description: Desired price of the payload
        in: formData
        name: desired_price
        type: string
      - description: Start date of the payload
        in: formData
        name: flight_date_start
        required: true
        type: string
      - description: End date of the payload
        in: formData
        name: flight_date_end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Payload successfully created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new payload
      tags:
      - Payloads
  /payloads/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a payload with the provided ID.
      parameters:
      - description: ID of the payload
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Payload successfully deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete payload by ID
      tags:
      - Payloads
    get:
      consumes:
      - application/json
      description: Retrieve the payload associated with a specific card ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Payload'
        "404":
          description: Not Found
          schema: {}
      summary: Get card payload by ID
      tags:
      - Payloads
    put:
      consumes:
      - multipart/form-data
      description: Update the details of an existing payload.
      parameters:
      - description: ID of the payload
        in: path
        name: id
        required: true
        type: integer
      - description: Title of the payload
        in: formData
        name: title
        type: string
      - description: Image file of the payload
        in: formData
        name: image
        type: file
      - description: Load capacity of the payload
        in: formData
        name: load_capacity
        type: string
      - description: Description of the payload
        in: formData
        name: description
        type: string
      - description: Detailed description of the payload
        in: formData
        name: detailed_description
        type: string
      - description: Desired price of the payload
        in: formData
        name: desired_price
        type: string
      - description: Start date of the payload
        in: formData
        name: flight_date_start
        type: string
      - description: End date of the payload
        in: formData
        name: flight_date_end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Payload successfully updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update existing payload
      tags:
      - Payloads
  /payloads/rocket_flight:
    post:
      consumes:
      - application/json
      description: Adds a specified payload to a planned flight. The user must provide
        their creator ID and the payload ID in the request body.
      parameters:
      - description: Payload ID to be added to the flight
        in: body
        name: payload
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: The ID of the draft flight after adding the payload
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
      summary: Add Payload to Flight
      tags:
      - Payloads
  /ping:
    get:
      description: very very friendly response
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show hello text
      tags:
      - Tests
  /profile:
    put:
      consumes:
      - application/json
      description: Update the profile of the currently logged-in user. Allows changing
        login, password, and email.
      parameters:
      - description: Updated user profile data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update Profile
      tags:
      - Authentication
  /rocket_flights:
    delete:
      consumes:
      - application/json
      description: Delete a rocket flight draft.
      produces:
      - application/json
      responses:
        "200":
          description: Rocket flight draft successfully deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete rocket flight
      tags:
      - RocketFlights
    get:
      consumes:
      - application/json
      description: Retrieve a list of rocket flights based on the provided query parameters.
      parameters:
      - description: Start date of the formation period
        in: query
        name: form_date_start
        type: string
      - description: End date of the formation period
        in: query
        name: form_date_end
        type: string
      - description: Status of the flight
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.RocketFlight'
              type: array
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get rocket flight list
      tags:
      - RocketFlights
    put:
      consumes:
      - application/json
      description: Update the details of a rocket flight.
      parameters:
      - description: Details of the rocket flight
        in: body
        name: flightDetails
        required: true
        schema:
          $ref: '#/definitions/models.RocketFlight'
      produces:
      - application/json
      responses:
        "200":
          description: Rocket flight details successfully updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Change rocket flight
      tags:
      - RocketFlights
  /rocket_flights/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a rocket flight and its associated payloads based on the
        provided ID.
      parameters:
      - description: ID of the rocket flight
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Payload'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get rocket flight by ID
      tags:
      - RocketFlights
  /rocket_flights/{id}/response:
    put:
      consumes:
      - application/json
      description: Update the status of a rocket flight.
      parameters:
      - description: ID of the rocket flight
        in: path
        name: id
        required: true
        type: integer
      - description: New status of the rocket flight
        in: body
        name: flightStatus
        required: true
        schema:
          $ref: '#/definitions/models.RocketFlight'
      produces:
      - application/json
      responses:
        "200":
          description: Rocket flight status successfully updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Response rocket flight
      tags:
      - RocketFlights
  /rocket_flights/form:
    post:
      consumes:
      - application/json
      description: Form a rocket flight.
      parameters:
      - description: Details of the rocket flight
        in: body
        name: flightStatus
        required: true
        schema:
          $ref: '#/definitions/models.RocketFlight'
      produces:
      - application/json
      responses:
        "200":
          description: Rocket flight successfully formed
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Form rocket flight
      tags:
      - RocketFlights
  /sign_in:
    post:
      consumes:
      - application/json
      description: Authenticates a user and generates an access token
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: User sign-in
      tags:
      - Authentication
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user account. The user will receive a JWT token
        upon successful registration.
      parameters:
      - description: User sign up data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUp'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully registered
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Sign up a new user
      tags:
      - Authentication
schemes:
- http
swagger: "2.0"
